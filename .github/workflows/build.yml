name: Build Flatpak Packages
on:
  push:
    branches:
      - master
      - main
      - beta
  pull_request:
    branches:
      - master
      - main
      - beta

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  linters:
    name: "Run linters"
    container:
      image: ghcr.io/flathub/flatpak-builder-lint:latest
      options: --privileged

    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Run manifest linters
        run: flatpak-builder-lint --exceptions --user-exceptions .github/linter-exceptions.json manifest org.mozilla.vpn.yml

      - name: Run Appstream linters
        run: flatpak-builder-lint appstream org.mozilla.vpn.metainfo.xml

  build:
    name: "Build Flatpak"
    environment: ${{ github.event_name == 'push' && 'Test Repo Deployment' || '' }}
    container:
      image: ghcr.io/flathub-infra/flatpak-github-actions:kde-6.9
      options: --privileged
    strategy:
      fail-fast: false
      matrix:
        variant:
          - arch: x86_64
            runner: ubuntu-latest
          - arch: aarch64
            runner: ubuntu-24.04-arm

    runs-on: ${{ matrix.variant.runner }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Import signing keys
        if: ${{ github.event_name == 'push' }}
        id: keys
        shell: bash
        env:
          GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
          GPG_PASSWORD: ${{ secrets.GPG_PASSWORD }}
          GNUPGHOME: ${{ runner.temp }}/gnupg-data
        run: |
          mkdir -m700 $GNUPGHOME
          echo "allow-preset-passphrase" > $GNUPGHOME/gpg-agent.conf
          gpgconf --kill gpg-agent

          echo "$GPG_PRIVATE_KEY" | gpg --import --batch
          KEYID=$(gpg --with-colons --list-keys | grep -m1 '^fpr:' | tr -d [fpr:])
          KEYGRIP=$(gpg --with-colons --with-keygrip --list-keys | grep -m1 '^grp:' | tr -d [grp:])
          echo "$GPG_PASSWORD" | /lib/gnupg2/gpg-preset-passphrase --preset $KEYGRIP

          echo "keyid=$KEYID" >> $GITHUB_OUTPUT

      - name: Build
        uses: flathub-infra/flatpak-github-actions/flatpak-builder@master
        with:
          bundle: mozillavpn.flatpak
          manifest-path: org.mozilla.vpn.yml
          arch: ${{ matrix.variant.arch }}
          gpg-sign: ${{ steps.keys.outputs.keyid }}
          cache-key: flatpak-builder-${{ github.event_name == 'pull_request' && github.event.pull_request.base.sha || github.sha }}

      - name: Upload repository
        uses: actions/upload-artifact@v4
        with:
          name: mozillavpn-repo-${{ matrix.variant.arch }}
          path: repo

      - name: Run builddir linters
        continue-on-error: true
        run: flatpak-builder-lint builddir flatpak_app

  build-repository:
    name: "Build repository"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download aarch64 repository
        uses: actions/download-artifact@v4
        with:
          name: mozillavpn-repo-aarch64
          path: repo-aarch64

      - name: Download x86_64 repository
        uses: actions/download-artifact@v4
        with:
          name: mozillavpn-repo-x86_64
          path: repo-x86_64     

      - name: Install ostree tools
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends ostree

      - name: Import repositories
        run: |
          mkdir -p outputs/repo
          ostree init --mode=archive-z2 --repo=outputs/repo
          ostree pull-local --repo=outputs/repo ./repo-aarch64 $(ostree refs --repo=repo-aarch64)
          ostree pull-local --repo=outputs/repo ./repo-x86_64 $(ostree refs --repo=repo-x86_64)

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: output

  deploy-repository:
    name: "Deploy repository"
    needs: build-repository
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write

    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        id: deployment
      
    