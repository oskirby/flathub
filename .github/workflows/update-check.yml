name: Check for updates
on:
  schedule:
    - cron: '0 14 * * *' # Run daily at 14:00
  workflow_dispatch: {}

jobs:
  update-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install pip tools
        run: pip install PyYAML yq requirements-parser toml aiohttp

      - name: Fetch latest releases
        run: |
          curl -sSL -o org.mozilla.vpn.releases.xml \
            https://mozilla.github.io/mozillavpn-product-details/org.mozilla.vpn.releases.xml

          echo -n APPSTREAM_TAG=v >> $GITHUB_ENV
          python -c 'import xml.etree.ElementTree as ET; print(ET.parse("org.mozilla.vpn.releases.xml").find("release").attrib["version"])' >> $GITHUB_ENV

      - name: Parse release tags
        run: |
          UPSTREAM_URL=$(python -m yq -r '.modules[-1].sources[0].url' org.mozilla.vpn.yml)
          echo CURRENT_TAG=$(python -m yq -r '.modules[-1].sources[0].tag' org.mozilla.vpn.yml) >> $GITHUB_ENV
          echo LATEST_TAG=$(git ls-remote --tags --sort="version:refname" ${UPSTREAM_URL} | cut -d/ -f3 | tail -1) >> $GITHUB_ENV

      - name: Update flatpak manifests
        run: |
          python -m yq -yi ".modules[-1].sources[0].tag = \"${LATEST_TAG}\"" org.mozilla.vpn.yml
          ./flatpak-update-crates.sh

          git status

      - name: Create Pull Request
        #if: ${{ github.env.LATEST_TAG == github.env.APPSTREAM_TAG && github.env.LATEST_TAG != github.env.CURRENT_TAG }}
        uses: peter-evans/create-pull-request@v7
        with:
          commit-message: "Upstream release ${{ github.env.LATEST_TAG }}"
          author: ${{ github.actor }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>
          add-paths: |
            flatpak-vpn-crates.json
            org.mozilla.vpn.releases.xml
            org.mozilla.vpn.yml
