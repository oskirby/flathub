name: Check for updates
on:
  schedule:
    - cron: '0 * * * *' # Runs hourly
  workflow_dispatch: {}

jobs:
  update-check:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        branch: [ main ]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          path: manifest
          ref: ${{ matrix.branch }}

      - uses: docker://ghcr.io/flathub/flatpak-external-data-checker:latest
        env:
          GIT_AUTHOR_NAME: Flatpak External Data Checker
          GIT_COMMITTER_NAME: Flatpak External Data Checker
          # email sets "github-actions[bot]" as commit author, see https://github.community/t/github-actions-bot-email-address/17204/6
          GIT_AUTHOR_EMAIL: ${{ github.actor }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>
          GIT_COMMITTER_EMAIL: ${{ github.actor }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: --update --commit-only --never-fork manifest/org.mozilla.vpn.yml

      - name: Check for new release
        working-directory: manifest
        id: check-release
        run: |
          if ! git diff ${{ matrix.branch }} --exit-code org.mozilla.vpn.yml; then
            echo "updated=true" >> $GITHUB_OUTPUT
            echo "upstream-ref=$(.github/parse-git-ref.py --module mozillavpn org.mozilla.vpn.yml)" >> $GITHUB_OUTPUT
          else
            echo "updated=false" >> $GITHUB_OUTPUT
          fi

      - uses: actions/setup-python@v5
        if: steps.check-release.outputs.updated == 'true'
        with:
          python-version: 3.11
          cache: pip
      - run: pip install -r .github/requirements.txt
        if: steps.check-release.outputs.updated == 'true'

      - name: Checkout upstream
        if: steps.check-release.outputs.updated == 'true'
        uses: actions/checkout@v4
        with:
          path: upstream
          repository: mozilla-vpn/mozilla-vpn-client
          ref: ${{ steps.check-release.outputs.upstream-ref }}
          sparse-checkout: |
            Cargo.lock
            requirements.in

      - name: Checkout tools
        if: steps.check-release.outputs.updated == 'true'
        uses: actions/checkout@v4
        with:
          path: tools
          repository: flatpak/flatpak-builder-tools
          ref: master

      - name: Update dependencies
        if: steps.check-release.outputs.updated == 'true'
        run: |
          python tools/cargo/flatpak-cargo-generator.py -o manifest/flatpak-vpn-crates.json upstream/Cargo.lock
          python tools/pip/flatpak-pip-generator.py -o manifest/flatpak-glean-parser.yaml --yaml --build-only $(cat upstream/requirements.in | grep glean-parser)
          git status
